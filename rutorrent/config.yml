---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rtorrent-config
data:
  rtorrent.rc.old: |
    pieces.memory.max.set = 2048M

    network.max_open_sockets.set = 999
    network.http.max_open.set = 99

    network.http.dns_cache_timeout.set = 0

    execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}
    execute.nothrow = rm,/run/php/.rtorrent.sock
    network.scgi.open_local = /run/php/.rtorrent.sock
    schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
    schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"
    log.open_file = "rtorrent", /config/log/rtorrent/rtorrent.log
    log.add_output = "debug", "rtorrent"
    min_peers = 40
    max_peers = 1200
    max_uploads = 15
    directory = /downloads/incoming
    session = /downloads/sessions
    bind = 0.0.0.0
    port_random = no
    port_range = 51413-51413
    check_hash = no
    use_udp_trackers = yes
    encryption = allow_incoming,try_outgoing,enable_retry
    dht = off
    dht_port = 6881
    peer_exchange = yes
    encoding_list = UTF-8
    system.umask.set = 022
    schedule = low_diskspace,5,60,close_low_diskspace=100M
    download_rate = 0
    upload_rate = 0
    # log.add_output = "info", "rtorrent"
    # dht = auto
    # dht_port = 6881
    # download_rate = 10000
    # upload_rate = 5000
    # # schedule = watch_directory_1,5,5,"load.start=/downloads/watched/*.torrent"
    # # ip = 178.32.28.59
    # # network.http.ssl_verify_peer.set=0
    # # scgi_port = 127.0.0.1:5000
  rtorrent.rc: |
    # This is an example resource file for rTorrent. Copy to
    # ~/.rtorrent.rc and enable/modify the options as needed. Remember to
    # uncomment the options you wish to enable.

    scgi_port=127.0.0.1:5000
    encoding_list = UTF-8

    log.open_file = "rtorrent.log", "/downloads/.log/rtorrent/rtorrent.log"
    log.add_output = "info", "rtorrent.log"
    log.add_output = "critical", "rtorrent.log"
    log.add_output = "error", "rtorrent.log"
    #log.add_output = "warn", "rtorrent.log"
    #log.add_output = "notice", "rtorrent.log"
    #log.add_output = "info", "rtorrent.log"
    #log.add_output = "debug", "rtorrent.log"

    execute2 = {sh,-c,/usr/bin/php /var/www/rutorrent/php/initplugins.php &}

    # Maximum and minimum number of peers to connect to per torrent.
    throttle.min_peers.normal.set = 40
    throttle.max_peers.normal.set = 50

    # Same as above but for seeding completed torrents (-1 = same as downloading)
    throttle.min_peers.seed.set = 10
    throttle.max_peers.seed.set = 50

    # Maximum number of simultanious uploads per torrent.
    throttle.max_uploads.set = 8

    # Global upload and download rate in KiB. "0" for unlimited.
    #
    #throttle.global_down.max_rate.set_kb = 0
    #throttle.global_up.max_rate.set_kb = 0

    # Default directory to save the downloaded torrents.
    directory.default.set = /downloads.2/incoming

    # # Default session directory. Make sure you don't run multiple instance
    # # of rtorrent using the same session directory. Perhaps using a
    # # relative path?
    # session.path.set = /downloads/.rtorrent/session
    session.path.set = /downloads.2/sessions

    # Watch a directory for new torrents, and stop those that have been
    # deleted.
    schedule2 = watch_directory,5,5,load_start=/downloads.2/watched/*.torrent
    # schedule2 = watch_directory,5,5,load_start=/downloads/.rtorrent/watch/*.torrent
    #schedule2 = untied_directory,5,5,stop_untied=

    # Close torrents when diskspace is low.
    #schedule2 = low_diskspace,5,60,close_low_diskspace=100M

    # The ip address reported to the tracker.
    #
    #network.local_address.set = 127.0.0.1
    #network.local_address.set = rakshasa.no

    # The ip address the listening socket and outgoing connections is
    # bound to.
    #
    #network.bind_address.set = 127.0.0.1
    #network.bind_address.set = rakshasa.no

    # Port range to use for listening.
    network.port_range.set = 49161-49161

    # Start opening ports at a random position within the port range.
    network.port_random.set = yes

    # Check hash for finished torrents. Might be usefull until the bug is
    # fixed that causes lack of diskspace not to be properly reported.
    #
    #pieces.hash.on_completion.set = no

    # Set whether the client should try to connect to UDP trackers.
    trackers.use_udp.set = yes

    # Alternative calls to bind and ip that should handle dynamic ip's.
    #
    #schedule2 = ip_tick,0,1800,ip=rakshasa
    #schedule2 = bind_tick,0,1800,bind=rakshasa

    # Encryption options, set to none (default) or any combination of the following:
    # allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
    #
    # The example value allows incoming encrypted connections, starts unencrypted
    # outgoing connections but retries with encryption if they fail, preferring
    # plaintext to RC4 encryption after the encrypted handshake
    #
    # protocol.encryption.set = allow_incoming,enable_retry,prefer_plaintext

    # Enable DHT support for trackerless torrents or when all trackers are down.
    # May be set to "disable" (completely disable DHT), "off" (do not start DHT),
    # "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
    # The default is "off". For DHT to work, a session directory must be defined.
    # 
    dht.mode.set = auto

    # UDP port to use for DHT. 
    # 
    dht.port.set=49160

    # Enable peer exchange (for torrents not marked private)
    #
    protocol.pex.set = yes

    # Set downlad list layout style. ("full", "compact")
    #
    #ui.torrent_list.layout.set = "full"
