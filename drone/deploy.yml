---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-server
  namespace: drone
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: drone-server
    spec:
      serviceAccountName: drone
      containers:
      - name: drone-server
        image: docker.io/drone/drone:0.8.5
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: grpc
          containerPort: 9000
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 40m
            memory: 32Mi
          limits:
            cpu: 1
            memory: 2Gi
        env:
        - name: DRONE_HOST
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.host
        - name: DRONE_OPEN
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.open
        - name: DRONE_DATABASE_DRIVER
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.database.driver
        - name: DRONE_DATABASE_DATASOURCE
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.database.datasource
        - name: DRONE_SECRET
          value: "drone-sync-secret"
          # valueFrom:
          #   secretKeyRef:
          #     name: drone-secrets
          #     key: server.secret
        - name: DRONE_ADMIN
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.admin
        - name: DRONE_ORGS
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.organization
        - name: DRONE_PROVIDER
          value: "github"
        - name: DRONE_GITHUB
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github
        - name: DRONE_GITHUB_CLIENT
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github.client
        - name: DRONE_GITHUB_SECRET
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github.secret
        - name: DRONE_DEBUG
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.debug
        volumeMounts:
        - name: drone
          mountPath: /var/lib/drone
      volumes:
      - name: drone
        persistentVolumeClaim:
          claimName: pvc-drone
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-agent
  namespace: drone
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: drone-agent
    spec:
      serviceAccountName: drone
      containers:
      - name: drone-agent
        image: docker.io/drone/agent:0.8.5
        imagePullPolicy: IfNotPresent
        env:
        - name: DRONE_SERVER
          value: "drone:9000"
        - name: DRONE_SECRET
          value: "drone-sync-secret"
          # valueFrom:
          #   secretKeyRef:
          #     name: drone-secrets
          #     key: server.secret
        - name: DRONE_DEBUG
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.debug
        resources:
          requests:
            cpu: 40m
            memory: 32Mi
          limits:
            cpu: 1
            memory: 2Gi
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: ""
