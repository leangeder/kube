---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-server
  # namespace: drone
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: drone-server
    spec:
      containers:
      - name: drone-server
        image: drone/drone:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          protocol: TCP
        - containerPort: 9000
          protocol: TCP
        resources:
          requests:
            cpu: 40m
            memory: 32Mi
        env:
        - name: DRONE_HOST
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.host
        - name: DRONE_OPEN
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.open
        - name: DRONE_DATABASE_DRIVER
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.database.driver
        - name: DRONE_DATABASE_DATASOURCE
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.database.datasource
        - name: DRONE_SECRET
          valueFrom:
            secretKeyRef:
              name: drone-secrets
              key: server.secret
        - name: DRONE_ADMIN
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.admin
        - name: DRONE_GITHUB
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github
        - name: DRONE_GITHUB_CLIENT
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github.client
        - name: DRONE_GITHUB_SECRET
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.remote.github.secret
        - name: DRONE_DEBUG
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: server.debug
        volumeMounts:
        - name: drone
          mountPath: /var/lib/drone
          subPath: docker/drone
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: drone
        glusterfs:
          endpoints: glusterfs-cluster
          path: data
          readOnly: false
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-agent
  # namespace: drone
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: drone-agent
    spec:
      containers:
      - name: drone-agent
        image: drone/agent:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        env:
        - name: DRONE_SERVER
          value: drone-service:9000
        # issue: https://github.com/drone/drone/issues/2048
        - name: DOCKER_API_VERSION
          value: "1.24"
        - name: DRONE_SECRET
          valueFrom:
            secretKeyRef:
              name: drone-secrets
              key: server.secret
        - name: DRONE_MAX_PROCS
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.max.procs
        - name: DRONE_DEBUG
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.debug
        - name: DRONE_DEBUG_PRETTY
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.debug.pretty
        - name: DRONE_HEALTHCHECK
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.healthcheck
        - name: DRONE_KEEPALIVE_TIME
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.keepalive.time
        - name: DRONE_KEEPALIVE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: drone-config
              key: agent.keepalive.timeout
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
